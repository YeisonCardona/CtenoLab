import{a as fe}from"./chunk-ML3V6ZOO.js";import{a as Q,b as Z,c as ne}from"./chunk-PO2GA6UA.js";import{b as te,c as ie}from"./chunk-CLRYXWNA.js";import"./chunk-OWSNVMTI.js";import{g as ae,h as re,i as oe,j as me,k as le,l as se,m as de,n as ce,o as pe,p as ue,q as be}from"./chunk-GEYP3GVJ.js";import"./chunk-V3KTDLLC.js";import"./chunk-MKG7IB6M.js";import"./chunk-WUD4HGYV.js";import"./chunk-C5MP6677.js";import{c as ee}from"./chunk-A2A35ACL.js";import"./chunk-HNOTP6PA.js";import"./chunk-6GID3F7O.js";import{a as W,b as X,f as J}from"./chunk-6LM54VFH.js";import"./chunk-ZOZSFTET.js";import"./chunk-UAQ7UU4Y.js";import{a as G,b as N}from"./chunk-M5Y3KVA3.js";import"./chunk-A7PT7FEX.js";import{b as O}from"./chunk-GB5JM2T7.js";import"./chunk-XP57CNC4.js";import"./chunk-4ULVSNUU.js";import{b as U}from"./chunk-XSAIEII5.js";import"./chunk-3C6VJBNL.js";import{b as Y}from"./chunk-62AV6QVL.js";import"./chunk-7J34S6W5.js";import"./chunk-KHEHVW2Y.js";import"./chunk-7Q5CT564.js";import"./chunk-75WOWH2T.js";import"./chunk-6Q6ZBUD2.js";import"./chunk-NXQCXCLR.js";import{a as F,c as P}from"./chunk-HFDRJSGA.js";import{j as K,l as j,m as z,o as q}from"./chunk-RPD344RW.js";import{m as B}from"./chunk-IAEIATSC.js";import{$b as A,Ab as s,Bb as t,Cb as i,Db as c,Eb as b,Fb as f,Hb as H,Lb as E,Mb as I,Pa as S,Qa as T,Sa as m,Wb as V,Xa as h,_b as e,ac as p,bc as _,db as w,ga as x,gc as L,ha as v,hb as M,jb as d,sc as $,wb as D,yb as k,zb as R}from"./chunk-P6GYV7WW.js";import"./chunk-HVQDNULJ.js";function ye(n,o){n&1&&(t(0,"th",32),e(1," Class "),i())}function xe(n,o){if(n&1&&(t(0,"td",33),e(1),i()),n&2){let a=o.$implicit;m(),p(" ",a.class," ")}}function ve(n,o){n&1&&(t(0,"th",32),e(1," Key "),i())}function Ee(n,o){if(n&1&&(t(0,"td",33)(1,"code"),e(2),i()()),n&2){let a=o.$implicit;m(2),p("'",a.command,"'")}}function _e(n,o){n&1&&(t(0,"th",32),e(1," Command "),i())}function Se(n,o){if(n&1&&(t(0,"td",33)(1,"code"),e(2),i()()),n&2){let a=o.$implicit;m(2),p("EVT=KEY ",a.command,";")}}function Ie(n,o){n&1&&(t(0,"th",32),e(1," HTTP Request "),i())}function Ce(n,o){if(n&1&&(t(0,"td",33),e(1),i()),n&2){let a=o.$implicit,l=I();m(),_(" http://",l.hardwareService.hardwareIP(),"/?c=EVT=KEY ",a.command,"; ")}}function Te(n,o){n&1&&c(0,"tr",34)}function we(n,o){n&1&&c(0,"tr",35)}function Me(n,o){n&1&&(t(0,"th",32),e(1," Command "),i())}function De(n,o){if(n&1&&(t(0,"td",33),e(1),i()),n&2){let a=o.$implicit;m(),p(" ",a.command," ")}}function ke(n,o){n&1&&(t(0,"th",32),e(1," Arguments "),i())}function Re(n,o){if(n&1&&(t(0,"td",33)(1,"code"),e(2),i()()),n&2){let a=o.$implicit;m(2),p("[",a.arguments,"]")}}function He(n,o){n&1&&(t(0,"th",32),e(1," Example "),i())}function Ve(n,o){if(n&1&&(t(0,"td",33)(1,"code"),e(2),i()()),n&2){let a=o.$implicit;m(2),p("EVT=SET ",a.example)}}function Ae(n,o){n&1&&(t(0,"th",32),e(1," HTTP Request "),i())}function Le(n,o){if(n&1&&(t(0,"td",33),e(1),i()),n&2){let a=o.$implicit,l=I();m(),_(" http://",l.hardwareService.hardwareIP(),"/?c=EVT=SET ",a.example,"; ")}}function $e(n,o){n&1&&c(0,"tr",34)}function Be(n,o){n&1&&c(0,"tr",35)}function Fe(n,o){if(n&1&&(t(0,"b"),e(1),i(),e(2),c(3,"br")),n&2){let a=o.$implicit;m(),p("",a.command,": "),m(),p(" ",a.description)}}var ge=class n extends ne{constructor(a,l,r,g,y,u,C){super(a,l,r,g,y);this.navigationService=u;this.breadcrumbService=C;this.navigationService.setActiveLink("/experiments/motor-imagery/intentional"),this.breadcrumbService.setBreadcrumbs([{label:"Home",url:"/home"},{label:"Experiments",url:"/experiments"},{label:"Motor Imagery",url:"/experiments/motor-imagery"},{label:"Intentional Motor Imagery",url:"/experiments/motor-imagery/intentional"}])}requieredTier="Hobbyist";storageKey="intentional-motor-imagery";resetValues(){this.formData.set({classes:["Right","Left"],trials_per_class:20,stimulus_duration:4e3,intentional_duration:2e3,soa:[1e3,2e3]})}summary=$(()=>{let a=this.formData();if(!a||Object.keys(a).length===0)return"";let l=[],r=a.classes?.length*a.trials_per_class||0,g=(a.soa?.[0]+a.soa?.[1])/2,y=a.soa?.[1]-a.soa?.[0],u=Math.round((a.intentional_duration+a.stimulus_duration+g)*r/6e4);r>200&&l.push("The total number of trials exceeds 200. This may lead to participant fatigue."),u>30&&l.push("Estimated experiment duration exceeds 30 minutes. Consider reducing trials or stimulus duration."),(a.soa?.[0]??1e3)<300&&l.push("The minimum SOA is below 500 ms. This may not provide sufficient recovery time between trials."),y<500&&l.push("SOA range is too narrow. Randomization may be imperceptible and timing may not vary meaningfully across trials."),(!a.classes?.length||a.classes?.length===1)&&l.push("At least two motor imagery classes are required for meaningful classification and comparison.");let C=l.length?`<p class="warning"><b>\u26A0\uFE0F Warnings:</b><br>${l.map(he=>`\u2022 ${he}`).join("<br>")}</p>`:"";return`
    <p class="summary-block">
      <b>Selected classes</b>: ${a.classes?.join(", ")||"\u2014"}<br>
      <b>Total trials</b>: ${r}
      (${a.trials_per_class} per class \xD7 ${a.classes?.length||0} classes)<br>
      <b>Intentional Phase Duration</b>: ${a.intentional_duration} ms<br>
      <b>Stimulus duration</b>: ${a.stimulus_duration} ms<br>
      <b>SOA</b>: ${a.soa?.[0]}\u2013${a.soa?.[1]} ms<br>
      <b>Estimated duration</b>: ${u} min
    </p>
    ${C}
  `});experiment={name:"Intentional Motor Imagery",description:"This experiment introduces a <b>two-stage task design</b> involving an <b>instruction phase</b> followed by a <b>delayed motor imagery execution</b>. Participants are first <b>informed of the upcoming task</b> and only later cued to <b>perform the imagery</b>, allowing separation of <b>expectation-related activity</b> from <b>intentional motor imagery execution</b>. This setup is valuable for analyzing <b>preparatory states</b> and the modulation of <b>sensorimotor rhythms</b> under controlled intention.",metadata:{type:"Intentional",paradigm:"Endogenous (with preparatory phase)",stimulus_type:"Visual",recording_modality:"EEG",difficulty_level:"Moderate",class_range:{min:2,max:4}},objective:"The objective of this experiment is to evaluate the participant's ability to <b>prepare</b> for and then <b>intentionally initiate motor imagery</b> following a preparatory cue. By temporally dissociating <b>anticipation</b> from <b>imagery execution</b>, researchers can better understand the <b>cognitive dynamics of intention</b> and their influence on <b>sensorimotor EEG patterns</b>.",hypothesis:"It is hypothesized that a <b>preparatory instruction phase</b> prior to motor imagery enhances <b>task-related cortical readiness</b> and results in more <b>reliable and temporally aligned modulations</b> of the <b>mu and beta frequency bands</b>. This structure may reveal <b>distinct anticipatory markers</b> preceding actual motor imagery onset, supporting the development of <b>intention-aware BCI models</b>.",procedure:'Each trial begins with a <b>fixation cross</b>, followed by a <b>text or icon-based instruction</b> indicating the imagery class (e.g., "Prepare: Left Hand"). After a <b>preparation period</b> (typically 2\u20133 seconds), a second <b>execution cue</b> (e.g., a beep or symbol flash) signals the participant to begin the <b>actual motor imagery</b>. The imagery phase lasts <b>4\u20136 seconds</b>, followed by a rest interval. EEG is recorded throughout, capturing both <b>anticipation</b> and <b>execution-related activity</b>. The full session consists of <b>multiple randomized trials</b> with controlled inter-stimulus intervals.',requirements:"The task requires a <b>modern browser</b> supporting <b>timed visual/audio stimuli</b>. EEG systems must ensure <b>precise time-locking</b> to both instruction and execution cues. Integration with <b>hardware triggers</b> is recommended to distinguish preparatory and execution phases. Participants should be <b>trained in maintaining attention</b> across the delay, and <b>feedback mechanisms</b> may be added to reinforce timing compliance.",characteristics:"This paradigm is <b>endogenous</b>, relying on <b>internally driven imagery</b>, but features an <b>intentional execution phase</b> temporally distinct from initial instruction. It is typically used with <b>unilateral imagery tasks</b>, allowing exploration of <b>intention formation</b>, <b>neural priming</b>, and <b>temporal decoding strategies</b> in EEG-based BCIs."};stimulusCommandMap={Right:["R","r"],Left:["L","l"],Up:["U","u"],Down:["D","d"],Rest:["R","r"," "]};formField=[{type:"checkbox",key:"classes",label:"Motor Imagery Classes",value:["Right","Left"],options:["Right","Left","Up","Down","Rest"],hint:"Select the classes to include in the experiment."},{type:"slider",key:"trials_per_class",label:"Trials per Class",value:20,min:1,max:100,step:1,suffix:" trials",hint:"Number of repetitions per selected class."},{type:"slider",key:"intentional_duration",label:"Intentional Phase Duration",value:2e3,min:100,max:1e4,step:100,suffix:" ms",hint:"Duration of the intentional control phase before stimulus appears."},{type:"slider",key:"stimulus_duration",label:"Stimulus Duration",value:4e3,min:100,max:1e4,step:100,suffix:" ms",hint:"Time each stimulus is visible during the trial."},{type:"range",key:"soa",label:"SOA (Stimulus Onset Asynchrony)",value:[1e3,2e3],min:0,max:5e3,step:100,suffix:" ms",hint:"Time between stimuli, randomized between min and max."}];static \u0275fac=function(l){return new(l||n)(h(F),h(P),h(U),h(ee),h(O),h(G),h(N))};static \u0275cmp=w({type:n,selectors:[["app-intentional"]],features:[M],decls:150,vars:24,consts:[["taskPanel",""],["tabGroup",""],["formComponent",""],[1,"no-margin-bottom"],[1,"align-justify",3,"innerHTML"],["dynamicHeight","","mat-stretch-tabs","",1,"example-stretched-tabs","mat-elevation-z4"],["label","Stimuli Delivery"],[1,"margin-bottom-small"],[3,"valueChange","config","columns","storageKey"],[1,"margin-top-large",3,"innerHTML"],[1,"flex-row","flex-row-left"],[1,"elipsis-96",3,"href"],["matIconButton","",3,"cdkCopyToClipboard"],["matButton","filled",1,"margin-top-large","margin-bottom-large",3,"click"],[3,"commandRegistry","experimentConfig","embeded","stimulusCommandMap"],["label","Neurofeedback & Runtime Events"],[1,"margin-top-large"],["mat-table","",3,"dataSource"],["matColumnDef","class"],["mat-header-cell","",4,"matHeaderCellDef"],["mat-cell","",4,"matCellDef"],["matColumnDef","command"],["matColumnDef","complete_command"],["matColumnDef","http_request"],["mat-header-row","",4,"matHeaderRowDef"],["mat-row","",4,"matRowDef","matRowDefColumns"],["matColumnDef","arguments"],["matColumnDef","example"],[1,""],["label","Experiment Context"],[3,"experiment"],["matFab","","extended","",1,"margin-top-large","button-configure","margin-bottom-medium","margin-left-small","mat-elevation-z1",3,"click"],["mat-header-cell",""],["mat-cell",""],["mat-header-row",""],["mat-row",""]],template:function(l,r){if(l&1){let g=H();t(0,"div",null,0)(2,"h1",3),e(3),i(),c(4,"p",4),t(5,"mat-tab-group",5,1)(7,"mat-tab",6),c(8,"div",7),t(9,"app-inputs",8,2),E("valueChange",function(u){return x(g),v(r.onFormValueChange(u))}),i(),c(11,"div",9),t(12,"p",10)(13,"span")(14,"b"),e(15,"Direct experiment link:"),i()(),t(16,"a",11),e(17),i(),t(18,"button",12)(19,"mat-icon"),e(20,"content_copy"),i()()(),t(21,"button",13),E("click",function(){return x(g),v(r.loadDefaultValues())}),e(22,"Load Default Values"),i(),t(23,"app-stimuli",14),E("commandRegistry",function(u){return x(g),v(r.setCommandRegistry(u))}),i()(),t(24,"mat-tab",15)(25,"h2",16),e(26,"Class Events for Neurofeedback Loop (EVT=KEY)"),i(),t(27,"p"),e(28," The commands listed below represent the "),t(29,"b"),e(30,"standard control classes"),i(),e(31," required to properly close the loop in "),t(32,"b"),e(33,"neurofeedback paradigms"),i(),e(34," or "),t(35,"b"),e(36,"inference-driven visual feedback experiments"),i(),e(37,". It is the responsibility of the user to implement the real-time signal processing, perform the classification or inference, and send the corresponding command back to the visualization system. "),i(),t(38,"p"),e(39," Each class is associated with a specific key that must be sent using the event format: "),t(40,"b")(41,"code"),e(42,"EVT=KEY <char>;"),i()(),c(43,"br"),e(44," For example: "),t(45,"code"),e(46,"EVT=KEY R;"),i(),e(47," or "),t(48,"code"),e(49,"EVT=KEY d;"),i(),e(50,". "),i(),t(51,"p"),e(52," This standard interface ensures seamless communication with the stimulus engine, allowing any external system (e.g., EEG decoder, BCI classifier, or embedded inference device) to "),t(53,"b"),e(54,"deliver neurofeedback events"),i(),e(55," reliably and in real time. "),i(),t(56,"table",17),b(57,18),d(58,ye,2,0,"th",19)(59,xe,2,1,"td",20),f(),b(60,21),d(61,ve,2,0,"th",19)(62,Ee,3,1,"td",20),f(),b(63,22),d(64,_e,2,0,"th",19)(65,Se,3,1,"td",20),f(),b(66,23),d(67,Ie,2,0,"th",19)(68,Ce,2,2,"td",20),f(),d(69,Te,1,0,"tr",24)(70,we,1,0,"tr",25),i(),t(71,"h3"),e(72,"Neurofeedback Control via HTTP"),i(),t(73,"p"),e(74," In a neurofeedback loop, you can trigger class-specific events by sending standard HTTP commands to the Cardputer. Each class is represented by a character (e.g., "),t(75,"code"),e(76,"R"),i(),e(77,", "),t(78,"code"),e(79,"L"),i(),e(80,", "),t(81,"code"),e(82,"U"),i(),e(83,", "),t(84,"code"),e(85,"D"),i(),e(86,", "),t(87,"code"),e(88,"S"),i(),e(89,"), and the system will emit a corresponding serial event such as "),t(90,"code"),e(91,"EVT=KEY\xA0L;"),i(),e(92,". "),i(),t(93,"p"),e(94," To simulate a key event without requiring physical input, send a request in the following format: "),i(),t(95,"pre")(96,"code"),e(97),t(98,"strong"),e(99,"X"),i(),e(100,";"),i()(),t(101,"p"),e(102," Here, "),t(103,"strong"),e(104,"X"),i(),e(105," is the character representing the intended class. This virtual key event will be processed identically to a real key press. "),i(),t(106,"p"),e(107," You can also chain multiple commands in a single request using semicolons: "),i(),t(108,"pre")(109,"code"),e(110),i()(),t(111,"p"),e(112," Upon processing, the Cardputer sends serial output messages like "),t(113,"code"),e(114,"EVT=KEY\xA0X;"),i(),e(115,", enabling real-time synchronization with inference engines or feedback systems. "),i(),t(116,"h2",16),e(117,"Runtime Configuration Events (EVT=SET)"),i(),t(118,"p"),e(119," Below is a list of supported runtime commands available through the "),t(120,"code"),e(121,"EVT=SET"),i(),e(122," mechanism. These commands allow the experiment to adapt dynamically to user input, classifier output, or external triggers. Each command includes a set of expected arguments and can be issued via HTTP or serial communication. "),i(),t(123,"table",17),b(124,21),d(125,Me,2,0,"th",19)(126,De,2,1,"td",20),f(),b(127,26),d(128,ke,2,0,"th",19)(129,Re,3,1,"td",20),f(),b(130,27),d(131,He,2,0,"th",19)(132,Ve,3,1,"td",20),f(),b(133,23),d(134,Ae,2,0,"th",19)(135,Le,2,2,"td",20),f(),d(136,$e,1,0,"tr",24)(137,Be,1,0,"tr",25),i(),t(138,"p",28),e(139," These commands are processed in real time by the visualization engine and can be used to finely control stimulus behavior in response to decoding events, user interactions, or adaptive experimental logic. "),i(),t(140,"p"),k(141,Fe,4,2,null,null,D),i()(),t(143,"mat-tab",29),c(144,"div",16)(145,"app-experiment",30),t(146,"button",31),E("click",function(){x(g);let u=V(6);return v(u.selectedIndex=1)}),t(147,"mat-icon"),e(148,"build"),i(),e(149," Configure this experiment "),i()()()()}l&2&&(m(3),A(r.experiment.name),m(),s("innerHTML",r.experiment.description,S),m(5),s("config",r.formField)("columns",r.columns)("storageKey",r.storageKey),m(2),s("innerHTML",r.summary(),S),m(5),s("href",L("",r.currentUrl,"",r.getFullWindowLink("/stimuli")),T),m(),_(" ",r.currentUrl,"",r.getFullWindowLink("/stimuli")," "),m(),s("cdkCopyToClipboard",r.currentUrl+r.getFullWindowLink("/stimuli")),m(5),s("experimentConfig",r.formData())("embeded","embeded")("stimulusCommandMap",r.stimulusCommandMap),m(33),s("dataSource",r.toDataSource(r.stimulusCommandMap)),m(13),s("matHeaderRowDef",r.displayedColumnsCommandMap),m(),s("matRowDefColumns",r.displayedColumnsCommandMap),m(27),p("http://",r.hardwareService.hardwareIP(),"/?c=CMD=KEY\xA0"),m(13),p("http://",r.hardwareService.hardwareIP(),"/?c=CMD=KEY\xA0L;CMD=BIP;"),m(13),s("dataSource",r.commandRegistry),m(13),s("matHeaderRowDef",r.displayedColumnsCommandRegistry),m(),s("matRowDefColumns",r.displayedColumnsCommandRegistry),m(4),R(r.commandRegistry),m(4),s("experiment",r.experiment))},dependencies:[B,Q,J,W,X,z,Y,Z,q,j,K,fe,ie,te,be,ae,oe,de,me,re,ce,le,se,pe,ue],encapsulation:2})};export{ge as MotorImageryIntentional};
