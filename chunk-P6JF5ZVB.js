import{c as oe}from"./chunk-OWSNVMTI.js";import"./chunk-MKG7IB6M.js";import{c as re,h as le,i as ce,j as se,k as de}from"./chunk-A2A35ACL.js";import"./chunk-HNOTP6PA.js";import{a as X,d as Y,g as K,j as Z,k as ee,l as te}from"./chunk-6GID3F7O.js";import"./chunk-ZOZSFTET.js";import{a as z,b as J}from"./chunk-M5Y3KVA3.js";import{b as ne}from"./chunk-LCYTT4UU.js";import"./chunk-3J4B7SWN.js";import"./chunk-XP57CNC4.js";import"./chunk-4ULVSNUU.js";import{b as ie}from"./chunk-XSAIEII5.js";import"./chunk-3C6VJBNL.js";import{b as q,c as A}from"./chunk-62AV6QVL.js";import{c as ae}from"./chunk-IUODOC7G.js";import{a as U,b as Q}from"./chunk-UAQ7UU4Y.js";import"./chunk-7Q5CT564.js";import"./chunk-75WOWH2T.js";import"./chunk-6Q6ZBUD2.js";import"./chunk-NXQCXCLR.js";import{j as G,l as j,o as $}from"./chunk-RPD344RW.js";import{l as N,m as W}from"./chunk-IAEIATSC.js";import{$b as P,Ab as C,Bb as n,Cb as a,Db as d,Hb as S,Lb as v,Mb as s,Pa as I,Qb as k,Rb as B,Sa as r,Sb as L,Xa as T,Xb as D,Yb as O,_b as t,ac as u,db as R,ga as w,ha as x,lc as f,mc as g,ra as _,tb as V,tc as F,ub as m,vb as p,wb as y,yb as E,zb as M}from"./chunk-P6GYV7WW.js";import{j as H}from"./chunk-HVQDNULJ.js";var _e=["taskPanel"],Ce=["ssidInput"],he=["passwordInput"];function we(i,o){i&1&&(n(0,"p"),t(1,"Using "),n(2,"strong"),t(3,"WebUSB"),a(),t(4,". This is the preferred method for communicating with supported hardware."),a())}function xe(i,o){i&1&&(n(0,"p"),t(1,"Using "),n(2,"strong"),t(3,"Web Serial API"),a(),t(4,". This is an alternative method for devices that support serial communication."),a())}function ve(i,o){if(i&1){let e=S();n(0,"button",8),v("click",function(){w(e);let l=s(2);return x(l.hardwareService.core.autoConnect())}),t(1," Auto-Connect to Hardware "),n(2,"mat-icon"),t(3,"usb"),a()()}}function fe(i,o){if(i&1){let e=S();n(0,"div",7)(1,"button",8),v("click",function(){w(e);let l=s();return x(l.hardwareService.core.requestAndConnectDevice())}),t(2," Select Hardware to Connect "),n(3,"mat-icon"),t(4,"usb"),a()(),m(5,ve,4,0,"button",9),a()}if(i&2){let e=s();r(5),p(e.hardwareService.core.hasAvailableDevice()?5:-1)}}function ge(i,o){if(i&1&&(n(0,"b"),t(1),a(),t(2),d(3,"br")),i&2){let e=o.$implicit;r(),u("",e.name,":"),r(),u(" ",e.value)}}function be(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().latency*1e3,"1.0-2")," \xB5s ")}}function Se(i,o){i&1&&t(0," ??? ")}function Ie(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().jitter*1e3,"1.0-2")," \xB5s ")}}function Te(i,o){i&1&&t(0," ??? ")}function Pe(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().min*1e3,"1.0-2")," \xB5s ")}}function ye(i,o){i&1&&t(0," ??? ")}function Ee(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().max*1e3,"1.0-2")," \xB5s ")}}function Me(i,o){i&1&&t(0," ??? ")}function He(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().median*1e3,"1.0-2")," \xB5s ")}}function ke(i,o){i&1&&t(0," ??? ")}function Be(i,o){if(i&1&&t(0),i&2){let e=s(2);u(" ",e.hardwareService.core.latencyStats().samples," ")}}function Le(i,o){i&1&&t(0," ??? ")}function De(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().latency/2*1e3,"1.0-2")," \xB5s ")}}function Oe(i,o){i&1&&t(0," ??? ")}function Fe(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().jitter/2*1e3,"1.0-2")," \xB5s ")}}function Re(i,o){i&1&&t(0," ??? ")}function Ve(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().min/2*1e3,"1.0-2")," \xB5s ")}}function Ne(i,o){i&1&&t(0," ??? ")}function We(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().max/2*1e3,"1.0-2")," \xB5s ")}}function Ge(i,o){i&1&&t(0," ??? ")}function je(i,o){if(i&1&&(t(0),f(1,"number")),i&2){let e=s(2);u(" ",g(1,1,e.hardwareService.core.latencyStats().median/2*1e3,"1.0-2")," \xB5s ")}}function $e(i,o){i&1&&t(0," ??? ")}function qe(i,o){if(i&1&&t(0),i&2){let e=s(2);u(" ",e.hardwareService.core.latencyStats().samples," ")}}function Ae(i,o){i&1&&t(0," ??? ")}function Ue(i,o){if(i&1){let e=S();n(0,"div",29)(1,"h4",30),t(2),a(),d(3,"p",25)(4,"div",31),n(5,"mat-form-field",32)(6,"mat-label"),t(7),a(),n(8,"select",33),v("change",function(l){let b=w(e).$implicit,h=s(3);return x(h.onPortChange(l,b.command))}),n(9,"option",34),t(10,"OFF"),a(),n(11,"option",35),t(12,"Port 0"),a(),n(13,"option",36),t(14,"Port 1"),a(),n(15,"option",37),t(16,"Port 2"),a(),n(17,"option",38),t(18,"Port 3"),a(),n(19,"option",39),t(20,"Port 4"),a(),n(21,"option",40),t(22,"Port 5"),a()()()()}if(i&2){let e=o.$implicit,c=s().$implicit;r(2),P(e.name),r(),C("innerHTML",e.description,I),r(),D("background-image","url("+e.image+")"),r(3),P(c.portName),r(),C("value",e.port)}}function Qe(i,o){if(i&1&&(n(0,"h3"),t(1),a(),d(2,"p",26)(3,"div",27),n(4,"div",28),E(5,Ue,23,6,"div",29,y),a()),i&2){let e=o.$implicit;r(),P(e.title),r(),C("innerHTML",e.description,I),r(),D("background-image","url("+e.image+")"),r(2),M(e.modules)}}function ze(i,o){if(i&1){let e=S();n(0,"div",10)(1,"button",11),v("click",function(){w(e);let l=s();return x(l.hardwareService.core.disconnect())}),t(2," Disconnect from Hardware "),n(3,"mat-icon"),t(4,"usb_off"),a()(),n(5,"button",8),v("click",function(){w(e);let l=s();return x(l.testConnection())}),t(6," Test Connection "),a()(),n(7,"div",12)(8,"p",13),t(9,"Connection successful!"),a(),n(10,"p",14),t(11,"Connection failed!"),a()(),d(12,"mat-divider"),n(13,"p",12),E(14,ge,4,2,null,null,y),a(),d(16,"mat-divider"),n(17,"h2"),t(18,"Latency"),a(),n(19,"div",15)(20,"button",16),v("click",function(){w(e);let l=s();return x(l.hardwareService.core.measureLatency())}),t(21," Start Latency Test "),n(22,"mat-icon"),t(23,"acute"),a()(),n(24,"p")(25,"b"),t(26,"Latency (RTT)"),a(),t(27," corresponds to the round-trip time measured from the moment a message is sent until a response is received, using high-precision timestamps. This is the "),n(28,"b"),t(29,"actual measured delay"),a(),t(30," and includes both transmission and return paths. "),a(),n(31,"p"),t(32," The values shown on the right represent an "),n(33,"b"),t(34,"estimated one-way latency"),a(),t(35,", calculated by dividing RTT-based measurements by two. This estimation "),n(36,"b"),t(37,"assumes symmetrical communication delay"),a(),t(38," and is provided for reference only. "),a(),n(39,"div",17)(40,"p")(41,"b"),t(42,"Latency (RTT):"),a(),m(43,be,2,4)(44,Se,1,0),d(45,"br"),n(46,"b"),t(47,"Jitter (RTT):"),a(),m(48,Ie,2,4)(49,Te,1,0),d(50,"br"),n(51,"b"),t(52,"Min:"),a(),m(53,Pe,2,4)(54,ye,1,0),d(55,"br"),n(56,"b"),t(57,"Max:"),a(),m(58,Ee,2,4)(59,Me,1,0),d(60,"br"),n(61,"b"),t(62,"Median:"),a(),m(63,He,2,4)(64,ke,1,0),d(65,"br"),n(66,"b"),t(67,"Samples:"),a(),m(68,Be,1,1)(69,Le,1,0),a(),n(70,"p")(71,"b"),t(72,"Latency:"),a(),m(73,De,2,4)(74,Oe,1,0),d(75,"br"),n(76,"b"),t(77,"Jitter:"),a(),m(78,Fe,2,4)(79,Re,1,0),d(80,"br"),n(81,"b"),t(82,"Min:"),a(),m(83,Ve,2,4)(84,Ne,1,0),d(85,"br"),n(86,"b"),t(87,"Max:"),a(),m(88,We,2,4)(89,Ge,1,0),d(90,"br"),n(91,"b"),t(92,"Median:"),a(),m(93,je,2,4)(94,$e,1,0),d(95,"br"),n(96,"b"),t(97,"Samples:"),a(),m(98,qe,1,1)(99,Ae,1,0),a()()(),d(100,"mat-divider"),n(101,"h2"),t(102,"Wi-Fi"),a(),d(103,"p",18),n(104,"div",19)(105,"mat-form-field",20)(106,"mat-label"),t(107,"Network (SSID)"),a(),d(108,"input",21,1),a(),n(110,"mat-form-field",20)(111,"mat-label"),t(112,"WiFi Password"),a(),d(113,"input",22,2),n(115,"button",23),v("click",function(l){w(e);let b=s();return x(b.clickEventHidePassword(l))}),n(116,"mat-icon"),t(117),a()()()(),n(118,"button",24),v("click",function(){w(e);let l=s();return x(l.connectToWifi())}),t(119," Connect Hardware to WiFi "),n(120,"mat-icon"),t(121,"wifi"),a()(),d(122,"p",25)(123,"p",26)(124,"mat-divider"),n(125,"h2"),t(126,"Modular Real-Time Hardware"),a(),n(127,"p"),t(128," This hardware platform supports modular connections through two main interfaces: "),n(129,"b"),t(130,"I2C"),a(),t(131," and "),n(132,"b"),t(133,"GPIO"),a(),t(134,". Each port is color-coded to indicate its function: "),a(),n(135,"ul")(136,"li")(137,"b"),t(138,"Red ports"),a(),t(139,": "),n(140,"b"),t(141,"I2C"),a(),t(142," \u2013 Designed for smart modules that communicate over the I2C bus, such as joysticks, expanders, and sensors with digital interfaces."),a(),n(143,"li")(144,"b"),t(145,"Black ports"),a(),t(146,": "),n(147,"b"),t(148,"GPIO"),a(),t(149," \u2013 Used for modules that require direct digital input/output, such as buttons, LEDs, and basic binary actuators."),a()(),n(150,"p"),t(151," This color-coded scheme helps ensure correct module connection and prevents miswiring during hardware setup. "),a(),E(152,Qe,7,4,null,null,y)}if(i&2){let e=s();r(8),O("active",e.successConnectedMessage()),r(2),O("active",e.failConnectedMessage()),r(4),M(e.hardwareService.core.getProperties()),r(6),C("disabled",e.hardwareService.core.measuringLatency()),r(23),p(e.hardwareService.core.latencyStats().latency>0?43:44),r(5),p(e.hardwareService.core.latencyStats().jitter>0?48:49),r(5),p(e.hardwareService.core.latencyStats().min>0?53:54),r(5),p(e.hardwareService.core.latencyStats().max>0?58:59),r(5),p(e.hardwareService.core.latencyStats().median>0?63:64),r(5),p(e.hardwareService.core.latencyStats().samples>0?68:69),r(5),p(e.hardwareService.core.latencyStats().latency>0?73:74),r(5),p(e.hardwareService.core.latencyStats().jitter>0?78:79),r(5),p(e.hardwareService.core.latencyStats().min>0?83:84),r(5),p(e.hardwareService.core.latencyStats().max>0?88:89),r(5),p(e.hardwareService.core.latencyStats().median>0?93:94),r(5),p(e.hardwareService.core.latencyStats().samples>0?98:99),r(5),C("innerHTML",e.autoConnectedIP(),I),r(5),C("value",e.lastSSID()),r(5),C("value",e.lastPassword())("type",e.hidePassword()?"password":"text"),r(2),V("aria-label","Hide password")("aria-pressed",e.hidePassword()),r(2),P(e.hidePassword()?"visibility_off":"visibility"),r(),C("disabled",e.connectingToWifi()),r(4),C("innerHTML",e.connectionMessage(),I),r(),C("innerHTML",e.howToConnect(),I),r(29),M(e.realTimeModules)}}function Je(i,o){if(i&1){let e=S();n(0,"button",43),v("click",function(){let l=w(e).$implicit,b=s(2);return x(b.onCommand(l))}),t(1),a()}if(i&2){let e=o.$implicit;r(),P(e)}}function Xe(i,o){if(i&1&&(d(0,"mat-divider"),n(1,"div",41),E(2,Je,2,1,"button",42,y),a()),i&2){let e=s();r(2),M(e.testCommands)}}var me=class i{constructor(o,e,c,l,b){this.navigationService=o;this.breadcrumbService=e;this.hardwareService=c;this.supabaseService=l;this.dialog=b;o.setActiveLink("/hardware-control-panel"),this.breadcrumbService.setBreadcrumbs([{label:"Home",url:"/home"},{label:"Hardware Control Panel",url:"/hardware-control-panel"}]),F(()=>{let h=c.core.hardwareIP();h&&(this.connectionMessage.set(`Connection successful: <b>${h}</b>`),this.howToConnect.set(`
  To interact with the Cardputer, simply access the URL
  <code>http://${h}/?c=CMD=...</code> from any web browser or HTTP client.
  You can send multiple commands separated by semicolons (<code>;</code>), and each must include the <code>CMD=</code> prefix.
  For example:
  <code>http://${h}/?c=CMD=BRAND;CMD=BIP;</code>.
  The system will interpret each command as if it were typed in the serial REPL interface.
`))}),F(()=>{this.hardwareService.core.isConnected();for(let h of["JOY","EXT","LUX","BTN"]){let pe=h.toLowerCase(),ue=localStorage.getItem("cteno-hardware-connection-port-"+pe)||"255";this.hardwareService.writeLine("CMD=CONF "+h+"="+ue+";")}})}taskPanel;ssidInput;passwordInput;autoConnectedIP=_("");hidePassword=_(!0);lastSSID=_(localStorage.getItem("cteno-hardware-connection-ssid")||"");lastPassword=_(localStorage.getItem("cteno-hardware-connection-password")||"");lastIP=_(localStorage.getItem("cteno-hardware-connection-ip")||"");connectionMessage=_("");connectingToWifi=_(!1);howToConnect=_("");selectedInterface="auto";successConnectedMessage=_(!1);failConnectedMessage=_(!1);devMode=window.location.hostname.startsWith("localhost");connectionType=_("serial");intervalId;timeOutId;requieredTier="Hobbyist";startTierInspection(o=3e3,e=1e3){this.timeOutId=window.setTimeout(()=>{let c=this.supabaseService.getTierLevel(this.supabaseService.userTier()),l=this.supabaseService.getTierLevel(this.requieredTier);this.intervalId=window.setInterval(()=>{c<l?this.taskPanel?.nativeElement?.classList?.add("locked"):this.taskPanel?.nativeElement?.classList?.remove("locked")},e),c<l&&this.dialog.open(le,{data:{title:"Tier Restriction!",question:`This paradigm is only available to users with the <b>${this.requieredTier}</b> plan or higher.`,confirmText:"Got it"}})},o)}ngOnInit(){let o=localStorage.getItem("cteno-hardware-connection-mode"),e=o==="usb"||o==="serial"?o:"serial";this.connectionType.set(e),this.onConnectionTypeChange(e),this.startTierInspection()}ngOnDestroy(){this.intervalId&&clearInterval(this.intervalId),this.timeOutId&&clearInterval(this.timeOutId)}selectConnectionType(o){this.connectionType.set(o),this.onConnectionTypeChange(o)}onConnectionTypeChange(o){this.hardwareService.setMode(o)}testConnection(){return H(this,null,function*(){this.hardwareService.core.flushQueues(),yield this.hardwareService.core.writeLine("CMD=PING;CMD=@BIP 1000 100 128;CMD=@BRAND;");let o=yield this.hardwareService.core.readLine();this.successConnectedMessage.set(o==="RESP=PONG;"),this.failConnectedMessage.set(o!=="RESP=PONG;")})}onCommand(o){return H(this,null,function*(){yield this.hardwareService.core.writeLine(o)})}clickEventHidePassword(o){this.hidePassword.set(!this.hidePassword()),o.stopPropagation()}connectToWifi(){return H(this,null,function*(){this.connectingToWifi.set(!0),this.connectionMessage.set("Connecting to WiFi...");let o=this.ssidInput.nativeElement.value,e=this.passwordInput.nativeElement.value;localStorage.setItem("cteno-hardware-connection-ssid",o),localStorage.setItem("cteno-hardware-connection-password",e),yield this.hardwareService.core.writeLine('CMD=WIFI "'+o+'" "'+e+'";');let c=0;for(;;){let l=yield this.hardwareService.readLine();if(!l.startsWith("RESP=WIFI_CONNECTING;")){if(l.startsWith("RESP=WIFI_FAILED")||l.startsWith("RESP=WIFI_ERROR;")){this.connectionMessage.set("Connection failed. Please check your SSID and password."),yield this.hardwareService.core.writeLine("CMD=@BIP 2000 100 100;"),yield this.hardwareService.core.writeLine("CMD=@BIP 2000 100 100;");break}else if(l.startsWith("RESP=WIFI_CONNECTED")){let b=l.split("IP=")[1]?.replace(";","");this.hardwareService.hardwareIP.set(b),localStorage.setItem("cteno-hardware-connection-ip",b),yield this.hardwareService.core.writeLine("CMD=@BIP;");break}if(c++,c>50){this.connectionMessage.set("Connection timed out. Please check your SSID and password.");break}}}this.connectingToWifi.set(!1)})}onPortChange(o,e){let c=o.target.value;this.hardwareService.writeLine(`CMD=CONF ${e}=${c};`),localStorage.setItem("cteno-hardware-connection-port-"+e.toLowerCase(),c)}realTimeModules=[{title:"I2C Modules",image:"/assets/images/hardware/pahub.svg",portName:"I2C port",description:`The <b>I2C section</b> supports modules that communicate via the <b>I2C protocol</b>, allowing multiple devices to share the same bus.
  Use the <b>dropdown menus</b> to assign the corresponding <b>GPIO port</b> to each <b>I2C-compatible module</b> connected through the <b>PaHub</b>.`,modules:[{name:"Joystick2",command:"JOY",port:localStorage.getItem("cteno-hardware-connection-port-joy")||"255",image:"/assets/images/hardware/joystick2.svg",description:"The <b>Joystick2 module</b> provides <b>two-axis analog control</b> along with a <b>central push-button</b>. Ideal for directional navigation, motor control tasks, or interactive input during experiments."},{name:"EXT.IO",command:"EXT",port:localStorage.getItem("cteno-hardware-connection-port-ext")||"255",image:"/assets/images/hardware/ext_io.svg",description:"The <b>EXT.IO module</b> expands the available GPIO pins, providing <b>8 additional digital I/O channels</b> through the <b>I2C bus</b>. Suitable for controlling external actuators or reading multiple digital signals."}]},{title:"GPIO Modules",image:"/assets/images/hardware/pbhub.svg",portName:"GPIO port",description:`
The <b>GPIO section</b> allows you to manage up to <b>6 I2C-compatible modules</b> using the <b>PaHub multiplexer</b>.
Each <b>port (0\u20135)</b> corresponds to an <b>independent I2C channel</b>.
Use the <b>dropdown menus</b> below to assign the correct <b>GPIO port</b> to each connected module.`,modules:[{name:"Light Sensor",command:"LUX",port:localStorage.getItem("cteno-hardware-connection-port-lux")||"255",image:"/assets/images/hardware/light_sensor.svg",description:"Light detection module with an integrated tactile button. Useful for measuring ambient light levels or triggering events based on illumination."},{name:"Dual Button",command:"BTN",port:localStorage.getItem("cteno-hardware-connection-port-btn")||"255",image:"/assets/images/hardware/dual_button.svg",description:"Dual-button input module featuring independent red and blue buttons. Ideal for binary selections or quick user responses during experiments."},{name:"Flashlight",command:"FLS",port:localStorage.getItem("cteno-hardware-connection-port-FLS")||"255",image:"/assets/images/hardware/flashlight.svg",description:"LED module designed for delivering <b>luminous stimuli</b> during experiments. Ideal for visual cueing or attention modulation tasks."}]}];testCommands=[];static \u0275fac=function(e){return new(e||i)(T(z),T(J),T(ne),T(ie),T(re))};static \u0275cmp=R({type:i,selectors:[["app-hardware-control-panel"]],viewQuery:function(e,c){if(e&1&&(k(_e,5),k(Ce,5),k(he,5)),e&2){let l;B(l=L())&&(c.taskPanel=l.first),B(l=L())&&(c.ssidInput=l.first),B(l=L())&&(c.passwordInput=l.first)}},decls:15,vars:4,consts:[["taskPanel",""],["ssidInput",""],["passwordInput",""],["name","connectionType","aria-label","Connection Type",3,"change","value"],["value","usb"],["value","serial"],[1,"margin-bottom-large"],[1,"flex-row","margin-bottom-large"],["matButton","filled",3,"click"],["matButton","filled"],[1,"flex-row"],["matButton","filled",1,"disconnect",3,"click"],[1,"margin-top-large"],[1,"success"],[1,"fail"],[1,"margin-bottom-large","margin-top-large"],["matButton","filled",3,"click","disabled"],[1,"grid-responsive-2"],[1,"margin-top-large",3,"innerHTML"],[1,"flex-row","margin-top-large"],["appearance","outline",1,"wifi-form-field"],["matInput","",3,"value"],["matInput","",3,"value","type"],["matIconButton","","matSuffix","",3,"click"],["matButton","filled",1,"margin-bottom-large",3,"click","disabled"],[1,"no-margin-top",3,"innerHTML"],[3,"innerHTML"],[1,"module-image"],[1,"grid-responsive-3","margin-top-large"],[1,"flex-column","flex-center"],[1,"no-margin-bottom"],[1,"module-image-unit"],["appearance","outline",1,"port-selector"],["matNativeControl","",3,"change","value"],["value","255"],["value","0"],["value","1"],["value","2"],["value","3"],["value","4"],["value","5"],[1,"button-row","margin-top-large"],["matButton","tonal",1,"command-button"],["matButton","tonal",1,"command-button",3,"click"]],template:function(e,c){if(e&1){let l=S();n(0,"div",null,0)(2,"h1"),t(3,"Hardware Control Panel"),a(),n(4,"mat-button-toggle-group",3),v("change",function(h){return w(l),x(c.selectConnectionType(h.value))}),n(5,"mat-button-toggle",4),t(6,"USB"),a(),n(7,"mat-button-toggle",5),t(8,"Serial"),a()(),n(9,"div",6),m(10,we,5,0,"p")(11,xe,5,0,"p"),a(),m(12,fe,6,1,"div",7)(13,ze,154,27),m(14,Xe,4,0),a()}e&2&&(r(4),C("value",c.hardwareService.connectionMode()),r(6),p(c.connectionType()==="usb"?10:c.connectionType()==="serial"?11:-1),r(2),p(c.hardwareService.core.isConnected()?13:12),r(2),p(c.supabaseService.userTier()==="Developer"&&c.testCommands?14:-1))},dependencies:[$,j,G,Q,U,A,q,te,ee,K,X,Y,Z,W,N,de,ce,se,oe,ae],styles:[".disconnect[_ngcontent-%COMP%]{background-color:var(--mat-sys-error)!important}.success[_ngcontent-%COMP%]{display:none}.success.active[_ngcontent-%COMP%]{display:block;color:var(--mat-sys-primary)}.fail[_ngcontent-%COMP%]{display:none}.fail.active[_ngcontent-%COMP%]{display:block;color:var(--mat-sys-error)}.button-row[_ngcontent-%COMP%]{display:flex;flex-flow:wrap;gap:8px;justify-content:space-evenly}.command-button[_ngcontent-%COMP%]{font-family:monospace;font-size:.8rem}.wifi-form-field[_ngcontent-%COMP%]{width:100%}.module-image-unit[_ngcontent-%COMP%], .module-image[_ngcontent-%COMP%]{background-size:contain;background-repeat:no-repeat;background-position:center;width:100%;aspect-ratio:4}.module-image-unit[_ngcontent-%COMP%]{aspect-ratio:2}.port-selector[_ngcontent-%COMP%]{width:50%;margin:16px auto}"]})};export{me as HardwareControlPanel};
