import{a as be}from"./chunk-MHCSWVYS.js";import{a as J,b as Q,c as ie}from"./chunk-BQFEUBCK.js";import{b as ee,c as te}from"./chunk-QB7OLLSZ.js";import"./chunk-SM5WZ42E.js";import{g as ne,h as ae,i as re,j as oe,k as le,l as se,m as me,n as de,o as ce,p as ue,q as pe}from"./chunk-H5WGIHLG.js";import"./chunk-PJNPSINV.js";import"./chunk-BBP7SRE3.js";import"./chunk-PPTOLQUC.js";import"./chunk-7SFZJKQS.js";import{c as Z}from"./chunk-F75DWSR5.js";import"./chunk-FIZVL3VI.js";import"./chunk-JXTH7T7D.js";import{a as N,b as U,f as X}from"./chunk-HUBB3RBY.js";import"./chunk-WNFD6FAI.js";import"./chunk-NZGDHJV2.js";import{a as z,b as O}from"./chunk-5BZ6FIDP.js";import"./chunk-DA5AWU2W.js";import{b as Y}from"./chunk-R3FTHKHZ.js";import"./chunk-LYRYWH7B.js";import"./chunk-O4F2KMSI.js";import{b as W}from"./chunk-FMSA2PVT.js";import"./chunk-VEDDZ7KK.js";import{b as j}from"./chunk-RMWCCIY2.js";import"./chunk-CZTA7AJK.js";import"./chunk-JDOSHPMK.js";import"./chunk-XDCPJGNX.js";import"./chunk-Z2VBC4WU.js";import"./chunk-ZNKCRLLO.js";import"./chunk-YQMFFB7N.js";import{a as B,c as L}from"./chunk-G5CEFGBZ.js";import{j as K,l as V,m as $,o as G}from"./chunk-LGQQ7PIV.js";import{m as H}from"./chunk-PKIU2H5U.js";import{$b as P,Ab as m,Bb as t,Cb as i,Db as d,Eb as g,Fb as h,Hb as D,Lb as C,Mb as x,Pa as w,Qa as I,Sa as o,Wb as R,Xa as c,_b as e,ac as y,bc as M,db as q,ga as S,gc as F,ha as v,hb as k,jb as b,sc as A,ub as E,vb as _}from"./chunk-HXPFIK5A.js";import"./chunk-5KHZBZE7.js";function he(n,l){n&1&&(t(0,"th",30),e(1," Class "),i())}function xe(n,l){if(n&1&&(t(0,"td",31),e(1),i()),n&2){let a=l.$implicit;o(),y(" ",a.name," ")}}function ye(n,l){n&1&&(t(0,"th",30),e(1," Command "),i())}function Se(n,l){if(n&1&&(t(0,"td",31)(1,"pre"),e(2),i()()),n&2){let a=l.$implicit;o(2),y("'",a.value,"'")}}function ve(n,l){n&1&&(t(0,"th",30),e(1," Alternative Command "),i())}function Ee(n,l){if(n&1&&(t(0,"pre"),e(1),i()),n&2){let a=x().$implicit;o(),y("'",a.value2,"'")}}function _e(n,l){if(n&1&&(t(0,"td",31),E(1,Ee,2,1,"pre"),i()),n&2){let a=l.$implicit;o(),_(a.value2?1:-1)}}function Ce(n,l){n&1&&(t(0,"th",30),e(1," Command String "),i())}function we(n,l){if(n&1&&(t(0,"pre"),e(1),i()),n&2){let a=x().$implicit;o(),y("CMD=KEY ",a.value2,";")}}function Me(n,l){if(n&1&&(t(0,"td",31),E(1,we,2,1,"pre"),i()),n&2){let a=l.$implicit;o(),_(a.value2?1:-1)}}function Te(n,l){n&1&&(t(0,"th",30),e(1," HTTP Command "),i())}function Ie(n,l){if(n&1&&(t(0,"pre"),e(1),i()),n&2){let a=x().$implicit,s=x();o(),M("http://",s.hardwareService.hardwareIP(),"/?c=CMD=KEY ",a.value2,";")}}function qe(n,l){if(n&1&&(t(0,"td",31),E(1,Ie,2,2,"pre"),i()),n&2){let a=l.$implicit;o(),_(a.value2?1:-1)}}function ke(n,l){n&1&&d(0,"tr",32)}function De(n,l){n&1&&d(0,"tr",33)}var fe=class n extends ie{constructor(a,s,r,u,f,p,T){super(a,s,r,u,f);this.navigationService=p;this.breadcrumbService=T;this.navigationService.setActiveLink("/experiments/motor-imagery/sequential"),this.breadcrumbService.setBreadcrumbs([{label:"Home",url:"/home"},{label:"Experiments",url:"/experiments"},{label:"Motor Imagery",url:"/experiments/motor-imagery"},{label:"Sequential Motor Imagery",url:"/experiments/motor-imagery/sequential"}])}requieredTier="Hobbyist";storageKey="sequential-motor-imagery";resetValues(){this.formData.set({classes:["Grasp -> Rotate","Push -> Pull"],trials_per_class:20,stimulus_duration:4e3,intentional_duration:2e3,soa:[1e3,2e3]})}summary=A(()=>{let a=this.formData();if(!a||Object.keys(a).length===0)return"";let s=[],r=a.classes?.length*a.trials_per_class||0,u=(a.soa?.[0]+a.soa?.[1])/2,f=a.soa?.[1]-a.soa?.[0],p=Math.round((a.stimulus_duration+a.stimulus_duration+u)*r/6e4);r>200&&s.push("The total number of trials exceeds 200. This may lead to participant fatigue."),p>30&&s.push("Estimated experiment duration exceeds 30 minutes. Consider reducing trials or stimulus duration."),(a.soa?.[0]??1e3)<300&&s.push("The minimum SOA is below 500 ms. This may not provide sufficient recovery time between trials."),f<500&&s.push("SOA range is too narrow. Randomization may be imperceptible and timing may not vary meaningfully across trials."),(!a.classes?.length||a.classes?.length===1)&&s.push("At least two motor imagery classes are required for meaningful classification and comparison.");let T=s.length?`<p class="warning"><b>\u26A0\uFE0F Warnings:</b><br>${s.map(ge=>`\u2022 ${ge}`).join("<br>")}</p>`:"";return`
    <p class="summary-block">
      <b>Selected classes</b>: ${a.classes?.join(", ")||"\u2014"}<br>
      <b>Total trials</b>: ${r}
      (${a.trials_per_class} per class \xD7 ${a.classes?.length||0} classes)<br>
      <b>Stimulus duration</b>: ${a.stimulus_duration} ms<br>
      <b>SOA</b>: ${a.soa?.[0]}\u2013${a.soa?.[1]} ms<br>
      <b>Estimated duration</b>: ${p} min
    </p>
    ${T}
  `});experiment={name:"Sequential Motor Imagery",description:"This experiment involves the <b>imagination of ordered motor sequences</b>, such as <b>grasping followed by rotating</b> or <b>extending followed by retracting</b>. Each trial presents a <b>temporally structured cue sequence</b>, allowing researchers to study <b>multi-phase motor planning</b> and the temporal dynamics of motor imagery. It supports <b>complex classification strategies</b> based on the segmentation of motor intentions over time.",metadata:{type:"Sequential",paradigm:"Endogenous",stimulus_type:"Visual",recording_modality:"EEG",difficulty_level:"Advanced",class_range:{min:2,max:6}},objective:"The objective of this experiment is to evaluate the ability of participants to <b>internally generate temporally structured motor imagery sequences</b>. By presenting <b>two or more sequential cues</b> in each trial, it is possible to <b>analyze EEG responses</b> associated with <b>each phase of the motor plan</b> and assess the feasibility of decoding <b>multi-step motor intentions</b>.",hypothesis:"Sequential motor imagery is expected to induce <b>phase-specific modulations</b> in the <b>mu and beta bands</b>, revealing <b>temporal segmentation</b> in cortical activity. These dynamics may provide a basis for <b>high-resolution decoding</b> of compound motor plans in BCI systems.",procedure:'Participants are equipped with <b>EEG acquisition hardware</b> and seated in a <b>quiet environment</b>. Each trial begins with a <b>fixation cross</b>, followed by a <b>series of visual cues</b> (e.g., "Grasp -> Rotate") presented in succession, each lasting <b>2\u20134 seconds</b>. Participants are instructed to <b>imagine each action in the sequence</b> without physical movement. Trials include a <b>rest phase</b> between sequences. Multiple blocks ensure robustness across different class combinations.',requirements:"Requires a <b>modern web browser</b> with <b>timing-accurate visual rendering</b> and EEG hardware capable of <b>multi-event synchronization</b>. WebUSB, serial, or socket-based triggers are supported. Participants should be <b>trained in kinesthetic motor imagery</b> and instructed on <b>temporal separation of imagined actions</b>. Experimental supervision is recommended.",characteristics:"This experiment is categorized as <b>endogenous</b> and <b>sequential</b>, involving <b>internal motor imagery of multiple actions in temporal order</b>. It enables the study of <b>cortical dynamics across time segments</b>, useful for decoding <b>multi-phase intentions</b> and training BCI systems with <b>complex command structures</b>."};stimulusCommandMap={Grasp:["G","g"],Rotate:["T","t"],Push:["P","p"],Pull:["U","u"],"Open Hand":["O","o"],"Close Fist":["C","c"],"Flex Elbow":["F","f"],"Extend Elbow":["E","e"],"Raise Arm":["R","r"],"Lower Arm":["D","d"],Supinate:["S","s"],Pronate:["N","n"],"Step Forward":["W","w"],"Step Backward":["B","b"],"Toe Raise":["Q","q"],"Toe Press":["Z","z"],"Wrist Flexion":["X","x"],"Wrist Extension":["V","v"],"Ankle Dorsiflexion":["A","a"],Plantarflexion:["L","l"],Pinch:["I","i"],Release:["Y","y"],"Point Forward":["M","m"],Retract:["K","k"],"Reach Forward":["H","h"],"Pull Back":["J","j"],"Lift Arm":["1"],"Drop Arm":["2"],"Knee Extension":["3"],"Knee Flexion":["4"],Rest:["0"],"Grasp -> Rotate":[],"Push -> Pull":[],"Open Hand -> Close Fist":[],"Flex Elbow -> Extend Elbow":[],"Raise Arm -> Lower Arm":[],"Supinate -> Pronate":[],"Step Forward -> Step Backward":[],"Toe Raise -> Toe Press":[],"Wrist Flexion -> Wrist Extension":[],"Ankle Dorsiflexion -> Plantarflexion":[],"Pinch -> Release":[],"Point Forward -> Retract":[],"Reach Forward -> Pull Back":[],"Lift Arm -> Drop Arm":[],"Knee Extension -> Flexion":[]};formField=[{type:"checkbox",key:"classes",label:"Motor Imagery Classes",value:["Grasp -> Rotate","Push -> Pull"],options:["Grasp -> Rotate","Push -> Pull","Open Hand -> Close Fist","Flex Elbow -> Extend Elbow","Raise Arm -> Lower Arm","Supinate -> Pronate","Step Forward -> Step Backward","Toe Raise -> Toe Press","Wrist Flexion -> Wrist Extension","Ankle Dorsiflexion -> Plantarflexion","Pinch -> Release","Point Forward -> Retract","Reach Forward -> Pull Back","Lift Arm -> Drop Arm","Knee Extension -> Flexion","Rest"],hint:"Select the classes to include in the experiment."},{type:"slider",key:"trials_per_class",label:"Trials per Class",value:20,min:1,max:100,step:1,suffix:" trials",hint:"Number of repetitions per selected class."},{type:"slider",key:"stimulus_duration",label:"Instruction Duration",value:3e3,min:500,max:1e4,step:100,suffix:" ms",hint:"Time each individual instruction is displayed during the motor imagery sequence."},{type:"range",key:"soa",label:"SOA (Stimulus Onset Asynchrony)",value:[1e3,2e3],min:0,max:5e3,step:100,suffix:" ms",hint:"Time between stimuli, randomized between min and max."}];static \u0275fac=function(s){return new(s||n)(c(B),c(L),c(W),c(Z),c(Y),c(z),c(O))};static \u0275cmp=q({type:n,selectors:[["app-intentional"]],features:[k],decls:126,vars:19,consts:[["taskPanel",""],["tabGroup",""],["formComponent",""],[1,"no-margin-bottom"],[1,"align-justify",3,"innerHTML"],["dynamicHeight","","mat-stretch-tabs","",1,"example-stretched-tabs","mat-elevation-z4"],["label","Stimuli Delivery"],[1,"margin-bottom-small"],[3,"valueChange","config","columns","storageKey"],[1,"margin-top-large",3,"innerHTML"],[1,"flex-row","flex-row-left"],[1,"elipsis-96",3,"href"],["matIconButton","",3,"cdkCopyToClipboard"],["matButton","filled",1,"margin-top-large","margin-bottom-large",3,"click"],[3,"experimentConfig","embeded","stimulusCommandMap"],["label","Hardware Setup"],[1,"margin-top-large"],["mat-table","",3,"dataSource"],["matColumnDef","name"],["mat-header-cell","",4,"matHeaderCellDef"],["mat-cell","",4,"matCellDef"],["matColumnDef","value"],["matColumnDef","value2"],["matColumnDef","value3"],["matColumnDef","value4"],["mat-header-row","",4,"matHeaderRowDef"],["mat-row","",4,"matRowDef","matRowDefColumns"],["label","Experiment Context"],[3,"experiment"],["matFab","","extended","",1,"margin-top-large","button-configure","margin-bottom-medium","margin-left-small","mat-elevation-z1",3,"click"],["mat-header-cell",""],["mat-cell",""],["mat-header-row",""],["mat-row",""]],template:function(s,r){if(s&1){let u=D();t(0,"div",null,0)(2,"h1",3),e(3),i(),d(4,"p",4),t(5,"mat-tab-group",5,1)(7,"mat-tab",6),d(8,"div",7),t(9,"app-inputs",8,2),C("valueChange",function(p){return S(u),v(r.onFormValueChange(p))}),i(),d(11,"div",9),t(12,"p",10)(13,"span")(14,"b"),e(15,"Direct experiment link:"),i()(),t(16,"a",11),e(17),i(),t(18,"button",12)(19,"mat-icon"),e(20,"content_copy"),i()()(),t(21,"button",13),C("click",function(){return S(u),v(r.loadDefaultValues())}),e(22,"Load Default Values"),i(),d(23,"app-stimuli",14),i(),t(24,"mat-tab",15)(25,"h2",16),e(26,"Class Events for Neurofeedback Loop (EVT=KEY)"),i(),t(27,"p"),e(28," The commands listed below represent the "),t(29,"b"),e(30,"standard control classes"),i(),e(31," required to properly close the loop in "),t(32,"b"),e(33,"neurofeedback paradigms"),i(),e(34," or "),t(35,"b"),e(36,"inference-driven visual feedback experiments"),i(),e(37,". It is the responsibility of the user to implement the real-time signal processing, perform the classification or inference, and send the corresponding command back to the visualization system. "),i(),t(38,"p"),e(39," Each class is associated with a specific key that must be sent using the event format: "),t(40,"b")(41,"code"),e(42,"EVT=KEY <char>;"),i()(),d(43,"br"),e(44," For example: "),t(45,"code"),e(46,"EVT=KEY R;"),i(),e(47," or "),t(48,"code"),e(49,"EVT=KEY d;"),i(),e(50,". "),i(),t(51,"p"),e(52," This standard interface ensures seamless communication with the stimulus engine, allowing any external system (e.g., EEG decoder, BCI classifier, or embedded inference device) to "),t(53,"b"),e(54,"deliver neurofeedback events"),i(),e(55," reliably and in real time. "),i(),t(56,"table",17),g(57,18),b(58,he,2,0,"th",19)(59,xe,2,1,"td",20),h(),g(60,21),b(61,ye,2,0,"th",19)(62,Se,3,1,"td",20),h(),g(63,22),b(64,ve,2,0,"th",19)(65,_e,2,1,"td",20),h(),g(66,23),b(67,Ce,2,0,"th",19)(68,Me,2,1,"td",20),h(),g(69,24),b(70,Te,2,0,"th",19)(71,qe,2,1,"td",20),h(),b(72,ke,1,0,"tr",25)(73,De,1,0,"tr",26),i(),t(74,"h3"),e(75,"Neurofeedback Control via HTTP"),i(),t(76,"p"),e(77," In a neurofeedback loop, you can trigger class-specific events by sending standard HTTP commands to the Cardputer. Each class is represented by a character (e.g., "),t(78,"code"),e(79,"R"),i(),e(80,", "),t(81,"code"),e(82,"L"),i(),e(83,", "),t(84,"code"),e(85,"U"),i(),e(86,", "),t(87,"code"),e(88,"D"),i(),e(89,", "),t(90,"code"),e(91,"S"),i(),e(92,"), and the system will emit a corresponding serial event such as "),t(93,"code"),e(94,"EVT=KEY\xA0L;"),i(),e(95,". "),i(),t(96,"p"),e(97," To simulate a key event without requiring physical input, send a request in the following format: "),i(),t(98,"pre")(99,"code"),e(100,"http://192.168.1.12/?c=CMD=KEY\xA0"),t(101,"strong"),e(102,"X"),i(),e(103,";"),i()(),t(104,"p"),e(105," Here, "),t(106,"strong"),e(107,"X"),i(),e(108," is the character representing the intended class. This virtual key event will be processed identically to a real key press. "),i(),t(109,"p"),e(110," You can also chain multiple commands in a single request using semicolons: "),i(),t(111,"pre")(112,"code"),e(113,"http://192.168.1.12/?c=CMD=KEY\xA0L;CMD=BIP;"),i()(),t(114,"p"),e(115," Upon processing, the Cardputer sends serial output messages like "),t(116,"code"),e(117,"EVT=KEY\xA0X;"),i(),e(118,", enabling real-time synchronization with inference engines or feedback systems. "),i()(),t(119,"mat-tab",27),d(120,"div",16)(121,"app-experiment",28),t(122,"button",29),C("click",function(){S(u);let p=R(6);return v(p.selectedIndex=1)}),t(123,"mat-icon"),e(124,"build"),i(),e(125," Configure this experiment "),i()()()()}s&2&&(o(3),P(r.experiment.name),o(),m("innerHTML",r.experiment.description,w),o(5),m("config",r.formField)("columns",r.columns)("storageKey",r.storageKey),o(2),m("innerHTML",r.summary(),w),o(5),m("href",F("",r.currentUrl,"",r.getFullWindowLink("/stimuli")),I),o(),M(" ",r.currentUrl,"",r.getFullWindowLink("/stimuli")," "),o(),m("cdkCopyToClipboard",r.currentUrl+r.getFullWindowLink("/stimuli")),o(5),m("experimentConfig",r.formData())("embeded","embeded")("stimulusCommandMap",r.stimulusCommandMap),o(33),m("dataSource",r.toDataSource(r.stimulusCommandMap)),o(16),m("matHeaderRowDef",r.displayedColumns),o(),m("matRowDefColumns",r.displayedColumns),o(48),m("experiment",r.experiment))},dependencies:[H,J,X,N,U,$,j,Q,G,V,K,be,te,ee,pe,ne,re,me,oe,ae,de,le,se,ce,ue],encapsulation:2})};export{fe as MotorImagerySequential};
